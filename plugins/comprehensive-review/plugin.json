{
  "name": "comprehensive-review",
  "displayName": "Comprehensive Review",
  "description": "Comprehensive code and architecture review with multi-perspective analysis, security auditing, quality assessment, and AI-powered code analysis for production-grade quality assurance. v1.0.1 features enhanced agents and skill with triggering criteria, chain-of-thought reasoning, Constitutional AI principles, and comprehensive real-world examples for systematic reviews.",
  "changelog": "v1.0.1: Major prompt engineering improvements for all 3 agents and 1 skill with triggering criteria (20 USE cases each, 8 anti-patterns with clear delegation), 6-step chain-of-thought reasoning frameworks (60 guiding questions per agent/skill), 5 Constitutional AI principles (50 self-check questions per agent/skill), comprehensive few-shot examples (architect-review: monolithic-to-microservices migration 481 lines; code-reviewer: authentication system review 230+ lines; security-auditor: multi-tenant SaaS audit 367 lines; code-review-excellence skill: payment processing review with 6-step framework). Expected: 50-70% better review quality, 60% faster reviews, 70% more thorough analysis.",
  "version": "1.0.1",
  "keywords": [
    "code-review",
    "architecture-review",
    "security-audit",
    "quality-assurance",
    "pr-review",
    "static-analysis",
    "devsecops",
    "vulnerability-assessment",
    "threat-modeling",
    "compliance",
    "owasp",
    "code-quality",
    "refactoring",
    "technical-debt",
    "chain-of-thought",
    "constitutional-ai",
    "systematic-review",
    "ai-powered"
  ],
  "category": "quality",
  "author": {
    "name": "Wei Chen",
    "url": "https://myclaude.readthedocs.io/en/latest/"
  },
  "license": "MIT",
  "agents": [
    {
      "id": "architect-review",
      "file": "agents/architect-review.md",
      "name": "Architect Reviewer",
      "description": "Master software architect specializing in architecture patterns, clean architecture, microservices, event-driven systems, and distributed systems design",
      "status": "active",
      "version": "1.0.1",
      "maturity": "91%",
      "improvements": "Added triggering criteria with 20 USE cases and 8 anti-patterns with delegation decision tree (architect-review vs. code-reviewer vs. security-auditor vs. performance-engineer), 6-step chain-of-thought reasoning framework (Architecture Discovery → Pattern Analysis → Design Review → Quality Assessment → Scalability Analysis → Recommendations) with 60 guiding questions (10 per step), 5 Constitutional AI principles (Simplicity First, Scalability & Performance, Maintainability & Evolution, Security by Design, Cost-Effectiveness) with 50 self-check questions (10 per principle), comprehensive 481-line monolithic-to-microservices e-commerce migration example with service decomposition, C4 diagrams, migration roadmap, and self-critique (91% maturity score). Growth: 147 → 893 lines (+746 lines, 6x). Expected: 50-70% better architecture quality, 60% faster reviews, 70% more thorough analysis."
    },
    {
      "id": "code-reviewer",
      "file": "agents/code-reviewer.md",
      "name": "Code Reviewer",
      "description": "Elite code review expert specializing in modern AI-powered code analysis, security vulnerabilities, performance optimization, and production reliability",
      "status": "active",
      "version": "1.0.1",
      "maturity": "91%",
      "improvements": "Added triggering criteria with 20 USE cases and 8 anti-patterns with delegation decision tree (code-reviewer vs. architect-review vs. security-auditor vs. test-automator), 6-step chain-of-thought reasoning framework (Code Understanding → Quality Assessment → Security Analysis → Performance Review → Test Validation → Feedback Synthesis) with 60 guiding questions (10 per step), 5 Constitutional AI principles (Code Clarity, Security First, Performance Awareness, Test Quality, Maintainability) with 50 self-check questions (10 per principle), comprehensive 230+ line authentication system security review example with CVSS-scored vulnerabilities, before/after code fixes, and self-critique (91% maturity score). Growth: 157 → 827 lines (+670 lines, 527%). Expected: 50-70% better review quality, 60% faster reviews, 70% more comprehensive issue detection."
    },
    {
      "id": "security-auditor",
      "file": "agents/security-auditor.md",
      "name": "Security Auditor",
      "description": "Expert security auditor specializing in DevSecOps, comprehensive cybersecurity, compliance frameworks, vulnerability assessment, and threat modeling",
      "status": "active",
      "version": "1.0.1",
      "maturity": "91%",
      "improvements": "Added triggering criteria with 20 USE cases and 8 anti-patterns with delegation decision tree (security-auditor vs. code-reviewer vs. architect-review vs. compliance-officer), 6-step chain-of-thought reasoning framework (Threat Landscape Analysis → Vulnerability Assessment → Security Controls Review → Compliance Validation → Risk Prioritization → Remediation Roadmap) with 60 guiding questions (10 per step), 5 Constitutional AI principles (Defense in Depth, Least Privilege, Fail Securely, Security by Default, Continuous Validation) with 50 self-check questions (10 per principle), comprehensive 367-line multi-tenant SaaS fintech security audit example with OWASP Top 10 findings, CVSS scoring, compliance assessment (GDPR, SOC 2, SEC), 11 prioritized remediation recommendations, and self-critique (91% maturity score). Growth: 139 → 720 lines (+581 lines, 418%). Expected: 50-70% better security coverage, 60% faster audits, 70% more accurate risk assessment."
    }
  ],
  "commands": [
    {
      "id": "full-review",
      "file": "commands/full-review.md",
      "name": "/full-review",
      "description": "Perform comprehensive multi-perspective code review with architecture, security, and quality analysis",
      "status": "active"
    },
    {
      "id": "pr-enhance",
      "file": "commands/pr-enhance.md",
      "name": "/pr-enhance",
      "description": "Enhance pull request descriptions and improve review quality with AI-powered analysis",
      "status": "active"
    }
  ],
  "skills": [
    {
      "id": "comprehensive-review-patterns",
      "directory": "skills",
      "name": "Code Review Excellence",
      "description": "Master effective code review practices with systematic analysis, constructive feedback, and team collaboration. Enhanced with 6-step chain-of-thought reasoning framework, 5 Constitutional AI principles for empathetic communication, and comprehensive examples for PR reviews, security assessment, performance analysis, and test validation.",
      "version": "1.0.1",
      "maturity": "92%",
      "improvements": "Enhanced skill with optimized frontmatter description for better discoverability (includes specific file types: .py, .ts, .js, .go, .rs, .java, .c, .cpp), added 'When to use this skill' section with 20 concise use case examples, preserved comprehensive content with triggering criteria (20 USE cases, 8 anti-patterns, delegation decision tree), 6-step chain-of-thought reasoning framework (Context Gathering → High-Level Review → Line-by-Line Analysis → Security & Performance → Test Validation → Feedback Synthesis) with 60 guiding questions, 5 Constitutional AI principles (Constructive & Empathetic Communication 95%, Thoroughness & Systematic Analysis 90%, Actionable & Prioritized Feedback 93%, Knowledge Sharing & Team Growth 88%, Efficiency & Process Optimization 85%) with 50 self-check questions, comprehensive payment processing PR review example demonstrating 6-step framework with security findings (CVSS-scored), test coverage analysis, and empathetic feedback delivery achieving 90% overall maturity. Growth: 521 → 1,183 lines (+662 lines, 227%). Expected: 50-70% better review quality, 60% faster reviews, 70% more actionable feedback."
    }
  ]
}
