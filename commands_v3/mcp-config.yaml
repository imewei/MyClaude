# MCP Configuration
# Global settings for MCP server integration

version: "1.0"
updated: "2025-10-04"

# Global MCP Settings
global:
  # Default timeout for MCP calls (ms)
  timeout: 5000

  # Maximum concurrent MCP calls
  max_concurrent: 5

  # Enable MCP caching
  cache_enabled: true

  # Cache TTL (seconds)
  cache_ttl: 1800  # 30 minutes

  # Retry configuration
  retry:
    enabled: true
    max_attempts: 3
    backoff_factor: 2  # Exponential backoff

  # Logging
  logging:
    level: "info"  # debug, info, warn, error
    log_mcp_calls: true
    log_latency: true

# Knowledge Hierarchy Configuration
knowledge_hierarchy:
  enabled: true

  # Layer priorities (1=highest, 3=lowest)
  layers:
    - name: memory-bank
      priority: 1
      latency_target_ms: 100
      cache_writes: true

    - name: serena
      priority: 2
      latency_target_ms: 200
      cache_writes: true

    - name: context7
      priority: 3
      latency_target_ms: 500
      cache_writes: true
      rate_limit:
        calls_per_hour: 100

  # Authority rules for different contexts
  authority_rules:
    library_api:
      order: [context7, memory-bank, serena]
      description: "Latest official docs for libraries"

    project_code:
      order: [serena, memory-bank, context7]
      description: "Current codebase state"

    patterns:
      order: [memory-bank, serena, context7]
      description: "Learned project patterns"

# MCP-Specific Configuration

serena:
  enabled: true
  priority: critical
  preload: true
  cache:
    enabled: true
    ttl: 3600  # 1 hour
  performance:
    timeout_ms: 500
    parallel_queries: true

memory-bank:
  enabled: true
  priority: high
  preload: false  # Load on demand

  storage:
    max_size_mb: 100
    compression: true
    encryption: false

  cache:
    ttl_default: 2592000  # 30 days
    ttl_by_type:
      error_solutions: 7776000  # 90 days
      test_stability: 5184000  # 60 days
      ci_failures: 15552000  # 180 days
      quality_baseline: 7776000  # 90 days
      library_ids: 2592000  # 30 days

  cleanup:
    auto_cleanup: true
    cleanup_interval: "7 days"
    keep_high_confidence: true  # Keep items with >0.8 confidence

sequential-thinking:
  enabled: true
  priority: high
  preload: false

  configuration:
    max_thoughts: 20
    enable_branching: true
    parallel_branches: false

  performance:
    timeout_ms: 10000  # 10 seconds

context7:
  enabled: true
  priority: medium
  preload: false  # Lazy load

  rate_limiting:
    enabled: true
    calls_per_hour: 100
    calls_per_day: 500

  cache:
    enabled: true
    ttl: 604800  # 7 days for library docs

  optimization:
    batch_requests: true
    cache_library_ids: true

github:
  enabled: true
  priority: medium
  preload: false

  rate_limiting:
    enabled: true
    calls_per_hour: 1000  # GitHub API limit: 5000/hour
    use_conditional_requests: true  # ETags

  cache:
    enabled: true
    ttl:
      workflows: 300  # 5 minutes
      jobs: 300  # 5 minutes
      commits: 3600  # 1 hour
      prs: 600  # 10 minutes

  optimization:
    local_analysis_first: true  # Prefer local log parsing
    batch_api_calls: true

playwright:
  enabled: false  # User-triggered only
  priority: low

  configuration:
    headless: true
    timeout_ms: 30000

apidog:
  enabled: false  # Project-specific
  priority: low

# Smart Triggering Configuration
smart_triggers:
  enabled: true

  context7:
    # Trigger context7 when these patterns are detected
    patterns:
      imports:
        - "import (numpy|np|scipy|pandas|torch|jax|react)"
        - "from (numpy|scipy|pandas|torch|jax|react)"
      decorators:
        - "@jax\\.(jit|vmap|pmap|grad)"
        - "@torch\\.jit"
      functions:
        - "\\b(useState|useEffect|useMemo|useCallback)\\("
        - "\\bnp\\.(array|zeros|ones|dot|matmul)\\("

  memory-bank:
    # Always trigger for these commands
    always:
      - ultra-think
      - reflection
      - analyze-codebase
      - update-claudemd

    # Conditional trigger
    conditional:
      fix:
        condition: "error_hash_exists"
      quality:
        condition: "baseline_exists"
      run-all-tests:
        condition: "always"  # Track all test runs

# Performance Monitoring
monitoring:
  enabled: true

  metrics:
    - name: mcp_latency
      threshold_ms: 1000
      alert: true

    - name: cache_hit_rate
      threshold_percent: 60
      alert: true

    - name: api_rate_limit
      threshold_percent: 80
      alert: true

  reporting:
    interval: "daily"
    include_stats: true

# Fallback Configuration
fallbacks:
  enabled: true

  # If MCP fails, use fallback
  fallback_chain:
    context7:
      fallback: memory-bank
      max_retries: 2

    github:
      fallback: local_analysis
      max_retries: 2

  # Degraded mode
  degraded_mode:
    enabled: true
    trigger_on_latency_ms: 5000
    disable_non_critical_mcps: true
