# MCP Profiles
# Pre-configured MCP combinations for different command types

version: "1.0"
updated: "2025-10-04"

profiles:
  # Meta-Reasoning Profile
  # For deep analysis and reflection commands
  meta-reasoning:
    description: "Deep analysis, reflection, and multi-dimensional thinking"

    mcps:
      - name: sequential-thinking
        priority: critical
        preload: true
        config:
          max_thoughts: 20
          enable_branching: true

      - name: memory-bank
        priority: high
        preload: true
        operations: [read, write]
        cache_writes: true

      - name: serena
        priority: medium
        preload: false
        lazy_load: true
        trigger_condition: "code_context_needed"

    commands:
      - ultra-think
      - reflection
      - double-check

    performance:
      target_latency_ms: 1000
      max_latency_ms: 3000

  # Code Analysis Profile
  # For code quality and analysis commands
  code-analysis:
    description: "Code quality, bug fixing, and codebase analysis"

    mcps:
      - name: serena
        priority: critical
        preload: true
        config:
          parallel_queries: true
          cache_symbols: true

      - name: memory-bank
        priority: medium
        preload: false
        operations: [read, write]
        trigger_condition: "has_pattern_history"
        cache_patterns:
          - "error:*"
          - "quality_baseline:*"
          - "code_smells:*"

      - name: sequential-thinking
        priority: low
        preload: false
        trigger_condition: "complexity > 15"

    commands:
      - quality
      - fix
      - clean-codebase
      - code-review

    performance:
      target_latency_ms: 500
      max_latency_ms: 2000

  # Knowledge Integration Profile
  # For commands needing external library knowledge
  knowledge-integration:
    description: "Test generation, code adoption, documentation with external knowledge"

    mcps:
      - name: serena
        priority: critical
        preload: true

      - name: context7
        priority: high
        preload: false
        lazy_load: true
        trigger_condition: "detect_library_patterns"
        cache_library_ids: true

      - name: memory-bank
        priority: high
        preload: true
        operations: [read, write]
        cache_patterns:
          - "lib_id:*"
          - "library_docs:*"
          - "test_templates:*"

      - name: sequential-thinking
        priority: low
        preload: false
        trigger_condition: "complex_integration"

    commands:
      - generate-tests
      - adopt-code
      - update-docs

    performance:
      target_latency_ms: 800
      max_latency_ms: 3000

  # GitHub Workflow Profile
  # For GitHub-integrated commands
  github-workflow:
    description: "GitHub Actions, CI/CD, and workflow automation"

    mcps:
      - name: github
        priority: critical
        preload: true
        config:
          use_conditional_requests: true
          batch_api_calls: true

      - name: serena
        priority: medium
        preload: true
        config:
          analyze_yaml: true

      - name: memory-bank
        priority: high
        preload: true
        operations: [read, write]
        cache_patterns:
          - "ci_failure:*"
          - "ci_fix_history:*"
          - "workflow_patterns:*"

    commands:
      - fix-commit-errors

    performance:
      target_latency_ms: 600
      max_latency_ms: 2500

  # Documentation Profile
  # For documentation and understanding commands
  documentation:
    description: "Code explanation and documentation generation"

    mcps:
      - name: serena
        priority: critical
        preload: true
        config:
          ast_analysis: true
          extract_docstrings: true

      - name: context7
        priority: medium
        preload: false
        lazy_load: true
        trigger_condition: "library_api_reference_needed"

      - name: memory-bank
        priority: medium
        preload: false
        operations: [read, write]
        cache_patterns:
          - "doc_templates:*"
          - "explanation_cache:*"

    commands:
      - explain-code
      - update-claudemd
      - analyze-codebase

    performance:
      target_latency_ms: 600
      max_latency_ms: 2000

  # Git Operations Profile
  # For git and version control commands
  git-operations:
    description: "Git commits, hooks, and version control"

    mcps:
      - name: serena
        priority: medium
        preload: true
        config:
          git_integration: true
          diff_analysis: true

      - name: memory-bank
        priority: low
        preload: false
        operations: [read]
        cache_patterns:
          - "commit_patterns:*"

    commands:
      - commit
      - create-hook

    performance:
      target_latency_ms: 300
      max_latency_ms: 1000

  # Testing Profile
  # For test execution and generation
  testing:
    description: "Test execution, generation, and debugging"

    mcps:
      - name: serena
        priority: critical
        preload: true
        config:
          find_tests: true
          parse_test_output: true

      - name: memory-bank
        priority: high
        preload: true
        operations: [read, write]
        cache_patterns:
          - "test_stability:*"
          - "flaky_tests:*"
          - "test_templates:*"

      - name: context7
        priority: medium
        preload: false
        trigger_condition: "testing_framework_docs_needed"

    commands:
      - run-all-tests
      - generate-tests

    performance:
      target_latency_ms: 500
      max_latency_ms: 2000

  # Multi-Agent Profile
  # For multi-agent orchestration commands
  multi-agent:
    description: "Multi-agent coordination and optimization"

    mcps:
      - name: serena
        priority: critical
        preload: true

      - name: sequential-thinking
        priority: high
        preload: true
        config:
          enable_branching: true
          parallel_analysis: false

      - name: memory-bank
        priority: high
        preload: true
        operations: [read, write]
        cache_patterns:
          - "optimization_results:*"
          - "agent_coordination:*"

      - name: context7
        priority: low
        preload: false
        trigger_condition: "optimization_patterns_needed"

    commands:
      - multi-agent-optimize

    performance:
      target_latency_ms: 1000
      max_latency_ms: 4000

  # CI/CD Setup Profile
  # For CI/CD pipeline configuration
  ci-setup:
    description: "CI/CD pipeline setup and configuration"

    mcps:
      - name: serena
        priority: high
        preload: true
        config:
          yaml_generation: true

      - name: github
        priority: medium
        preload: false
        lazy_load: true
        trigger_condition: "github_actions_examples_needed"

      - name: memory-bank
        priority: low
        preload: false
        operations: [read]
        cache_patterns:
          - "ci_templates:*"

    commands:
      - ci-setup

    performance:
      target_latency_ms: 400
      max_latency_ms: 1500

  # Command Creation Profile
  # For creating new slash commands
  command-creation:
    description: "Creating and managing slash commands"

    mcps:
      - name: serena
        priority: critical
        preload: true
        config:
          template_analysis: true

      - name: memory-bank
        priority: medium
        preload: false
        operations: [read]
        cache_patterns:
          - "command_templates:*"
          - "command_patterns:*"

    commands:
      - command-creator

    performance:
      target_latency_ms: 400
      max_latency_ms: 1500

# Profile Inheritance
# Profiles can inherit from base profiles

inheritance:
  # All code-related profiles inherit base settings
  base-code:
    mcps:
      - name: serena
        priority: critical
        preload: true

  # All knowledge-heavy profiles inherit
  base-knowledge:
    mcps:
      - name: memory-bank
        priority: high
        preload: true
      - name: context7
        priority: medium
        preload: false

# Profile Selection Rules
# Automatic profile selection based on command characteristics

selection_rules:
  # If command has these patterns, use this profile
  patterns:
    - pattern: "think|reflect|analyze"
      profile: meta-reasoning

    - pattern: "test|spec"
      profile: testing

    - pattern: "quality|fix|clean"
      profile: code-analysis

    - pattern: "github|workflow|actions"
      profile: github-workflow

  # If command works with these file types
  file_types:
    - types: [".github/workflows/*.yml"]
      profile: github-workflow

    - types: ["test_*.py", "*_test.py", "*.spec.js"]
      profile: testing

    - types: ["*.md", "*.rst", "docs/*"]
      profile: documentation

# Performance Optimization
optimization:
  # Parallel MCP loading
  parallel_loading:
    enabled: true
    max_concurrent: 3

  # MCP result caching
  result_caching:
    enabled: true
    ttl_by_profile:
      meta-reasoning: 3600  # 1 hour
      code-analysis: 1800  # 30 minutes
      knowledge-integration: 7200  # 2 hours
      testing: 900  # 15 minutes

  # Lazy loading thresholds
  lazy_loading:
    enabled: true
    load_on_first_use: true
    preload_critical_only: true

# Monitoring & Metrics
monitoring:
  track_profile_usage: true
  track_mcp_latency: true
  track_cache_hits: true

  alerts:
    - condition: "latency > profile.max_latency_ms"
      action: "log_warning"

    - condition: "cache_hit_rate < 0.5"
      action: "optimize_cache"
